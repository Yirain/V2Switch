#!/bin/bash

# Vars
version="0.3"
v2switch_dir="/etc/v2switch"
v2switch_profiles_path=$v2switch_dir"/profiles"
v2switch_config_path=$v2switch_dir"/v2switch.conf"
v2ray_config_dir="/etc/v2ray"
v2switch_current_profile=""
default_ping_test_count="4"

# Color definition
GREEN="32m"

# Check root privilege
check_root_privilege()
{
	if [ ! `id -u` = 0 ] ; then
		echo "root privilege required!"
		exit 2
	fi
}

check_v2switch_config_file()
{
	if  !(cat $v2switch_config_path | grep "v2ray_config_dir" >/dev/null 2>&1) ||
		!(cat $v2switch_config_path | grep "current_profile" >/dev/null 2>&1);
	then
		echo "Error detected in $v2switch_config_path!"
		exit 1
	fi
}

check_config_dir()
{
	# If v2switch directory not exists
	if [ ! -d $v2switch_dir ];then
		check_root_privilege
		mkdir $v2switch_dir
		mkdir $v2switch_profiles_path
		touch $v2switch_config_path
		echo "# Auto-generated configs, do not edit!" > $v2switch_config_path
		echo "v2ray_config_dir = /etc/v2ray" >> $v2switch_config_path # Set v2ray_config_dir to default
		echo "current_profile =" >> $v2switch_config_path
		echo "ping_test_count = 4" >> $v2switch_config_path
	else
		check_v2switch_config_file
	fi
}

read_v2switch_config()
{
	v2ray_config_dir=$(cat $v2switch_config_path | sed 's/ //g' | grep "v2ray_config_dir" | grep -Eo '[^=]+$')
	v2switch_current_profile=$(cat $v2switch_config_path | sed 's/ //g' | grep "current_profile" | grep -Eo '[^=]+$')
	default_ping_test_count=$(cat $v2switch_config_path | sed 's/ //g' | grep "ping_test_count" | grep -Eo '[^=]+$')
}

list_profiles()
{
	for exist_profile_name in $(ls $v2switch_profiles_path)
	do
		echo $exist_profile_name
	done
	exit 0
}

current_profile()
{
	echo $v2switch_current_profile
	exit 0
}

add_profile()
{
	new_profile_path=$1

	# Check if new profile's path exists
	if [ ${#new_profile_path} -eq 0 ]; then
		echo "add: Path not specified!"
		exit 1
	elif [ ! -f $new_profile_path ]; then
		echo "add: Invalid file path!"
		exit 1
	fi

	# Get new profile name
	new_profile_name=${new_profile_path##*/} # Delete the last '/' and characters at the left
	new_profile_name=${new_profile_name%.*} # Delete the last '.' and characters at the right

	# Check if new profile name already exist
	for exist_profile_name in $(ls $v2switch_profiles_path)
	do
		if [ $exist_profile_name == $new_profile_name ]; then
			echo "add: Profile name already exist!"
			exit 1
		fi
	done

	# Add the new profile
	cat $new_profile_path > $v2switch_profiles_path"/"$new_profile_name

	exit 0
}

apply_profile()
{
	applying_profile_name=$1

	# Check if profile exists
	if [ ${#applying_profile_name} -eq 0 ]; then
		echo "apply: Profile not specified!"
		exit 1
	elif [ ! -f $v2switch_profiles_path"/"$applying_profile_name ]; then
		echo "apply: Profile not exists!!"
		exit 1
	fi
	# Exists and apply
	cat $v2switch_profiles_path"/"$applying_profile_name > $v2ray_config_dir"/config.json"
	sed -i "/^current_profile/ccurrent_profile = ${applying_profile_name}" $v2switch_config_path
	# Restart v2ray service
	systemctl restart v2ray

	exit 0
}

remove_profile()
{
	removing_profile_name=$1

	# Check if profile exists
	if [ ${#removing_profile_name} -eq 0 ]; then
		echo "remove: Profile not specified!"
		exit 1
	elif [ ! -f $v2switch_profiles_path"/"$removing_profile_name ]; then
		echo "remove: Profile not exist!"
		exit 1
	fi
	# Exists and remove
	rm $v2switch_profiles_path"/"$removing_profile_name

	exit 0
}

remove_all_profiles()
{
	while /bin/true
	do
		echo "Remove all profiles? [y/N]: "
		read option
		if [ $option == "N" ] || [ $option == "n" ]; then
			exit 0
		elif [ $option == "Y" ] || [ $option == "y" ]; then
			for filename in $(ls $v2switch_profiles_path)
			do
				rm $v2switch_profiles_path"/"$filename
			done
			exit 0
		else
			echo "Unknown option!"
			continue
		fi
	done
}

rename_profile()
{
	old_name=$1
	new_name=$2
	# Check parameters.
	if [ ${#old_name} -eq 0 ] || [ ${#new_name} -eq 0 ]; then
		echo "rename: Old/new name not specified!"
		exit 1
	# Check if profile exists.
	elif [ ! -f $v2switch_profiles_path"/"$old_name ]; then
		echo "rename: Target profile not exists!"
		exit 1
	# Check if the new name occupied.
	elif [ -f $v2switch_profiles_path"/"$new_name ]; then
		echo "rename: Profile name \"$new_name\" already exists!"
		exit 1
	# Good to go, change the file name.
	else
		mv $v2switch_profiles_path"/"$old_name $v2switch_profiles_path"/"$new_name
		# If the renamed profile is also the current profile, change the "current_file=" in v2switch.conf
		sed -i "/^current_profile/ccurrent_profile = ${new_name}" $v2switch_config_path
		exit 0
	fi
}

ping_and_tracer_and_mtr()
{
	ipv=$1
	target_profile=$2
	kind=$3
	profile_path=$v2switch_profiles_path"/"$target_profile

	# Check parameters.
	if [ $# -ne 3 ]; then
		echo "ping: Missing parameter!"
		exit 1
	# Check if ipv is valid
	elif [ $ipv != "4" ] && [ $ipv != "6" ]; then
		echo "ping: Invalid IP version!"
		exit 1
	# Check if profile exists.
	elif [ ! -f $profile_path ]; then
		echo "ping: Target profile not exists!"
		exit 1
	else
		# Get the hostname from profile
		hostname=$(cat $profile_path | grep "address" | sed 's/\t//g' | sed 's/.* "\(.*\)",/\1/g')
		# Start test
		if [ $kind == "ping" ]; then
			echo -e "\033[$GREEN * Hostname: $hostname\033[0m"
			/usr/bin/ping -n -c $default_ping_test_count -$ipv $hostname
		elif [ $kind == "tracer" ]; then
			echo -e "\033[$GREEN * Hostname: $hostname\033[0m"
			/usr/bin/traceroute -n -$ipv $hostname
		elif [ $kind == "mtr" ]; then
			/usr/bin/mtr -n -z -$ipv $hostname
		fi
		exit 0
	fi
}

testall()
{
	t = 1
}

autopick()
{
	t = 1
}

set_v2ray_service_config_directory()
{
	new_v2ray_service_config_directory=$1

	# Check if directory exists
	if [ ${#new_v2ray_service_config_directory} -eq 0 ]; then
		echo "setpath: No path specified!"
		exit 1
	elif [ ! -d $new_v2ray_service_config_directory ]; then
		echo "setpath: Directory not exists!"
		exit 1
	fi
	# Valid path and set
	v2ray_config_dir=$new_v2ray_service_config_directory
	sed -i "/^v2ray_config_dir/cv2ray_config_dir = ${v2ray_config_dir}" $v2switch_config_path
	# Re-apply the profile
	if [ ${#v2switch_current_profile} -ne 0 ]; then
		apply_profile $v2switch_current_profile
	fi

	exit 0
}

help()
{
	echo " V2Switch - Manage and switch between v2ray profiles"
	echo -e "\033[$GREEN * Version: $version\033[0m"
	echo -e "\033[$GREEN * V2Ray config directory: $v2ray_config_dir\033[0m"
	echo -e "\033[$GREEN * V2Switch config directory: $v2switch_dir\033[0m"
	echo " list                               List all profiles."
	echo " current                            Show current profile's name."
	echo " add         [file_path]            Add a profile from file \"PROFILE.json\"."
#	echo " import      [uri]                  Add a profile from uri."
#	echo " exporturi   [profile]              Export a profile to uri."
#	echo " exportjson  [profile]              Export a profile to json."
	echo " apply       [profile]              Apply a profile and restart v2ray."
	echo " remove      [profile]              Remove a profile."
	echo " rename      [old] [new]            Rename a profile."
	echo " removeall                          Remove all profiles."
	echo " ping        [4/6] [profile]        Ping test with IPv4 or IPv6."
	echo " tracer      [4/6] [profile]        Traceroute with IPv4 or IPv6."
	echo " mtr         [4/6] [profile]        MTR test with IPv4 or IPv6."
#	echo " testall                            Ping test on all profiles."
#	echo " autopick                           Ping all profiles and apply the lowest one."
	echo " setv2path   [dir_path]             Set the V2Ray config directory."
	echo " help                               Show this message."
}






# Initialize
check_config_dir
read_v2switch_config

# Receive option and parameters
if [ $# == 0 ]; then
	echo "No option received, use \"help\" to list the usage!"
	exit 1
fi
case $1 in
	"list")
		list_profiles;;
	"current")
		current_profile;;
	"add")
		check_root_privilege
		add_profile $2;;
	"apply")
		check_root_privilege
		apply_profile $2;;
	"remove")
		check_root_privilege
		remove_profile $2;;
	"removeall")
		check_root_privilege
		remove_all_profiles;;
	"rename")
		check_root_privilege
		rename_profile $2 $3;;
	"ping")
		ping_and_tracer_and_mtr $2 $3 "ping";;
	"tracer")
		ping_and_tracer_and_mtr $2 $3 "tracer";;
	"mtr")
		ping_and_tracer_and_mtr $2 $3 "mtr";;
	"setv2path")
		check_root_privilege
		set_v2ray_service_config_directory $2;;
	"help")
		help;;
	*)
		echo "Unknonw option \"$1\", use \"help\" to list the usage!";;
esac

exit 0
